service: 281-project1-api

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-locker
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2

environment:
  tableName: ${self:custom.tableName}

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - "Fn::GetAtt": [ LockerTable, Arn ]

functions:
  create:
    handler: create.main
    events:
      - http:
          path: files
          method: post
          cors: true
          authorizer: aws_iam
  get:
      handler: get.main
      events:
        - http:
            path: files/{id}
            method: get
            cors: true
            authorizer: aws_iam
  list:
      handler: list.main
      events:
        - http:
            path: files/
            method: get
            cors: true
            authorizer: aws_iam
  update:
      handler: update.main
      events:
        - http:
            path: files/{id}
            method: put
            cors: true
            authorizer: aws_iam
  delete:
      handler: delete.main
      events:
        - http:
            path: files/{id}
            method: delete
            cors: true
            authorizer: aws_iam

resources:
  - ${file(definitions/dynamo.yml)}
  - ${file(definitions/s3.yml)}
  - ${file(definitions/cognito.yml)}